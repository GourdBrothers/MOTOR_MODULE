################################################################################
#                                                                              #
#      IAR Universal Linker V6.6.0.102                                         #
#                                                                              #
#           Link time     =  22/Jan/2019  12:05:22                             #
#           Target CPU    =  A90                                               #
#           List file     =  C:\Users\Administrator\Desktop\123\Debug\List\ADC #
#                            _PWM.map                                          #
#           Output file 1 =  C:\Users\Administrator\Desktop\123\Debug\Exe\ADC_ #
#                            PWM.hex                                           #
#                            Format: intel-extended                            #
#           Output file 2 =  C:\Users\Administrator\Desktop\123\Debug\Exe\ADC_ #
#                            PWM.d90                                           #
#                            Format: ubrof10                                   #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -f                                                #
#                            C:\Users\ADMINI~1\AppData\Local\Temp\EW5D6E.tmp   #
#                            (C:\Users\Administrator\Desktop\123\Debug\Obj\Adc #
#                            Handle.r90                                        #
#                            C:\Users\Administrator\Desktop\123\Debug\Obj\ISR. #
#                            r90                                               #
#                            C:\Users\Administrator\Desktop\123\Debug\Obj\main #
#                            .r90                                              #
#                            C:\Users\Administrator\Desktop\123\Debug\Obj\PwmH #
#                            andle.r90                                         #
#                            C:\Users\Administrator\Desktop\123\Debug\Obj\Syst #
#                            emInit.r90                                        #
#                            -o                                                #
#                            C:\Users\Administrator\Desktop\123\Debug\Exe\ADC_ #
#                            PWM.d90                                           #
#                            -l                                                #
#                            C:\Users\Administrator\Desktop\123\Debug\List\ADC #
#                            _PWM.map                                          #
#                            -xms                                              #
#                            "-IG:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 8.0\avr\LIB\"                             #
#                            -f                                                #
#                            "G:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\avr\src\template\cfgm8a.xcl"            #
#                            (-D_..X_INTVEC_SIZE=26 -D_..X_FLASH_END=1FFF      #
#                            -D_..X_SRAM_BASE=60 -D_..X_SRAM_TBASE=60          #
#                            -D_..X_SRAM_TSIZE=A0 -D_..X_SRAM_END=45F          #
#                            -D_..X_EXT_SRAM_BASE=_..X_SRAM_END                #
#                            -D_..X_EXT_SRAM_SIZE=0                            #
#                            -D_..X_EXT_ROM_BASE=_..X_SRAM_END                 #
#                            -D_..X_EXT_ROM_SIZE=0                             #
#                            -D_..X_EXT_NV_BASE=_..X_SRAM_END                  #
#                            -D_..X_EXT_NV_SIZE=0 -D_..X_EEPROM_START=0        #
#                            -D_..X_EEPROM_END=1FF) -D_..X_HEAP_SIZE=0         #
#                            -D_..X_TINY_HEAP_SIZE=10                          #
#                            -D_..X_NEAR_HEAP_SIZE=20 -D_..X_FAR_HEAP_SIZE=0   #
#                            -D_..X_HUGE_HEAP_SIZE=0 -D_..X_CSTACK_SIZE=20     #
#                            -D_..X_RSTACK_SIZE=20                             #
#                            -D_..X_FLASH_CODE_END=_..X_FLASH_END -f           #
#                            "G:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\avr\src\template\cfg1toim.xcl"          #
#                            (-ca90 -w29                                       #
#                            -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)             #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_TBASE:+_.. #
#                            X_SRAM_TSIZE                                      #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_SRAM_TBASE:+ #
#                            _..X_SRAM_TSIZE                                   #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_TBASE:+_..X #
#                            _SRAM_TSIZE                                       #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_TBASE:+_..X_SRAM_TSI #
#                            ZE                                                #
#                            -Z(DATA)TINY_HEAP+_..X_TINY_HEAP_SIZE=_..X_SRAM_T #
#                            BASE:+_..X_SRAM_TSIZE                             #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_RSTACK_BASE- #
#                            _..X_RSTACK_END                                   #
#                            -Z(DATA)NEAR_I,NEAR_Z=_..X_SRAM_BASE-_..X_SRAM_EN #
#                            D                                                 #
#                            -Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END                                 #
#                            -Z(DATA)NEAR_N=_..X_SRAM_BASE-_..X_SRAM_END       #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=_..X_EEPROM_START-_..X #
#                            _EEPROM_END)                                      #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE                #
#                            -h'1895'(CODE)0-(_..X_INTVEC_SIZE-1)              #
#                            --global_fill -D_..X_RSTACK_BASE=_..X_SRAM_BASE   #
#                            -D_..X_RSTACK_END=_..X_SRAM_END -rt               #
#                            -Ointel-extended=C:\Users\Administrator\Desktop\1 #
#                            23\Debug\Exe\ADC_PWM.hex                          #
#                            -s __program_start                                #
#                            "G:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\avr\LIB\DLIB\dlAVR-1t-ec_mul-n.r90")    #
#                                                                              #
#                           Copyright (C) 1987-2018 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      0000005E  Relocatable, from module : ?C_STARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  R10                        = REG
  R11                        = REG
  R4                         = REG
  R5                         = REG
  R6                         = REG
  R7                         = REG
  R8                         = REG
  R9                         = REG
  __64bit_doubles            = disabled
  __Heap_Handler             = Basic
  __SystemLibrary            = DLib
  __cpu                      = 1
  __cpu_name                 = ATmega8A
  __dlib_file_descriptor     = 0
  __dlib_full_locale_support = 0
  __enhanced_core            = enabled
  __has_elpm                 = false
  __memory_model             = 1
  __rt_version               = 3
  __tiny_avr                 = false
  __vtable_memory            = __tinyflash

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_RSTACK_END         0000045F 
           _..X_RSTACK_BASE        00000060 
           _..X_FLASH_BASE         00000026 
           _..X_FLASH_CODE_END     00001FFF 
           _..X_RSTACK_SIZE        00000020 
           _..X_CSTACK_SIZE        00000020 
           _..X_HUGE_HEAP_SIZE     00000000 
           _..X_FAR_HEAP_SIZE      00000000 
           _..X_NEAR_HEAP_SIZE     00000020 
           _..X_TINY_HEAP_SIZE     00000010 
           _..X_HEAP_SIZE          00000000 
           _..X_EEPROM_END         000001FF 
           _..X_EEPROM_START       00000000 
           _..X_EXT_NV_SIZE        00000000 
           _..X_EXT_NV_BASE        0000045F 
           _..X_EXT_ROM_SIZE       00000000 
           _..X_EXT_ROM_BASE       0000045F 
           _..X_EXT_SRAM_SIZE      00000000 
           _..X_EXT_SRAM_BASE      0000045F 
           _..X_SRAM_END           0000045F 
           _..X_SRAM_TSIZE         000000A0 
           _..X_SRAM_TBASE         00000060 
           _..X_SRAM_BASE          00000060 
           _..X_FLASH_END          00001FFF 
           _..X_INTVEC_SIZE        00000026 
    *************************************************************************

  FILE NAME : C:\Users\Administrator\Desktop\123\Debug\Obj\AdcHandle.r90
  PROGRAM MODULE, NAME : AdcHandle

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 0000001C, align: 0
  Segment part 1. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001D, align: 0
  Segment part 2. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 0000001D 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001E, align: 0
  Segment part 3. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                0000001E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 4. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                0000001F 

    *************************************************************************

  FILE NAME : C:\Users\Administrator\Desktop\123\Debug\Obj\ISR.r90
  PROGRAM MODULE, NAME : ISR

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000002C - 00000035 (0xa bytes), align: 1
  Segment part 8.             Intra module refs:   Attiny13_ADC_ISR::??INTVEC 28
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Attiny13_ADC_ISR        0000002C 
               interrupt function
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000001D (0x1e bytes), align: 1
  Segment part 5. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Attiny13_ADC_ISR::??INTVEC 28
                                   0000001C 

    *************************************************************************

  FILE NAME : C:\Users\Administrator\Desktop\123\Debug\Obj\main.r90
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
TINY_Z
  Relative segment, address: DATA 00000060 - 00000061 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC_out                 00000060 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000036 - 00000047 (0x12 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00000036        ?cstartup_call_main (?C_STARTUP)
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000026 - 0000002B (0x6 bytes), align: 0
  Segment part 8.             Intra module refs:   ADC_out
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: TINY_Z>
                                   00000026 

    *************************************************************************

  FILE NAME : C:\Users\Administrator\Desktop\123\Debug\Obj\PwmHandle.r90
    *************************************************************************

  FILE NAME : C:\Users\Administrator\Desktop\123\Debug\Obj\SystemInit.r90
    *************************************************************************

  FILE NAME : G:\Program Files (x86)\IAR Systems\Embedded Workbench 8.0\avr\LIB\DLIB\dlAVR-1t-ec_mul-n.r90
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000048 - 00000049 (0x2 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            00000048        __exit (?__exit)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000004A - 0000005B (0x12 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  0000004A        Segment part 5 (?_exit)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000005C, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   0000005C        ?cstartup_call_main (?C_STARTUP)
                                                   exit (?exit)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000005C - 0000005D (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000001 (0x2 bytes), align: 1
  Segment part 0. ROOT 
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET                  00000000        Segment part 2 (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000005E, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         0000005E        Absolute parts (?ABS_ENTRY_MOD)
           ?C_STARTUP              0000005E        ?RESET (?RESET)
           __RESTART               0000005E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000005E - 00000069 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000006A - 0000006B (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    0000006A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000006C - 00000071 (0x6 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      0000006C        ?<Segment init: TINY_Z> (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000072 - 00000077 (0x6 bytes), align: 1
  Segment part 11.            Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     00000072 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000078 - 00000079 (0x2 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    00000078        ?cstartup_call_main (?C_STARTUP)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PROLOGUE_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000007A - 0000007B (0x2 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE2_L09          0000007A        __exit (?__exit)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000007C - 0000007D (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?PROLOGUE2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE1_L09          0000007C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000007E - 0000007F (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   ?PROLOGUE1_L09

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000080 - 00000083 (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        00000080        ?call_low_level_init (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000084 - 0000008F (0xc bytes), align: 1
  Segment part 3.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __memclr                00000084 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000090 - 0000009D (0xe bytes), align: 1
  Segment part 4.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __flashcpy              00000090 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000009E - 000000D1 (0x34 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          0000009E        ?need_segment_init (?C_STARTUP)
               calls direct

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 0000001D (0x1e bytes), align: 0
  Segment part 1.
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 0000001E - 00000025 (0x8 bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 0000001D          1E   com    1
?FILL1               CODE          0000001E - 00000025           8   rel    0
INITTAB              CODE          00000026 - 0000002B           6   rel    0
CODE                 CODE          0000002C - 000000D1          A6   rel    1
ABSOLUTE             DATA               0000001C                     rel    0
                     DATA               0000001D                   
                     DATA               0000001E                   
                     DATA               0000001F                   
TINY_I               DATA               00000060                     dse    0
TINY_Z               DATA          00000060 - 00000061           2   rel    0
CSTACK               DATA          00000062 - 00000081          20   dse    0
RSTACK               DATA          00000082 - 000000A1          20   dse    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 202 bytes of CODE memory (+ 8 range fill )
  66 bytes of DATA memory

Errors: none
Warnings: none

